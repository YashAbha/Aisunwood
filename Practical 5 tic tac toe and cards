1.Simulate tic – tac – toe game using min-max algorithm.

def find_best_move(board):
  
  best_move = (0, 0)
  best_value = 0
  for row in range(len(board)):
    for col in range(len(board[0])):
      if board[row][col] > best_value:
        best_move = (row, col)
        best_value = board[row][col]
  return best_move

# Example usage:
board = [
  [1, 2, 3],
  [4, 5, 6],
  [7, 8, 9],
]

best_move = find_best_move(board)
print("The Optimal Move is :")
print(f"ROW: {best_move[0]} COL: {best_move[1]}")






2. Shuffle deck of cards.

Suits = ["\u2663", "\u2665", 
"\u2666", "\u2660"] 
Ranks = ['A', '2', '3', '4', '5', 
'6', '7', '8', '9', '10', 
'J', 'Q', 'K']
for rank in Ranks: 
        for suit in Suits: 
            print(f'{rank} of {suit}'.ljust(10), end='')
        print()
